/*
 * WARNING: do not edit!
 * Generated by Makefile from ../../../openssl/source/include/openssl/conf.h.in
 *
 * Copyright 1995-2021 The OpenSSL Project Authors. All Rights Reserved.
 *
 * Licensed under the Apache License 2.0 (the "License").  You may not use
 * this file except in compliance with the License.  You can obtain a copy
 * in the file LICENSE in the source distribution or at
 * https://www.openssl.org/source/license.html
 */



#ifndef  ossl_OPENSSL_CONF_H
# define ossl_OPENSSL_CONF_H
# pragma once

# include "ossl/openssl/macros.h"
# ifndef ossl_OPENSSL_NO_DEPRECATED_3_0
#  define ossl_HEADER_CONF_H
# endif

# include "ossl/openssl/bio.h"
# include "ossl/openssl/lhash.h"
# include "ossl/openssl/safestack.h"
# include "ossl/openssl/e_os2.h"
# include "ossl/openssl/types.h"
# include "ossl/openssl/conferr.h"

#ifdef  __cplusplus
extern "C" {
#endif

typedef struct {
    char *section;
    char *name;
    char *value;
} ossl_CONF_VALUE;

ossl_SKM_DEFINE_STACK_OF_INTERNAL(ossl_CONF_VALUE, ossl_CONF_VALUE, ossl_CONF_VALUE)
#define ossl_sk_CONF_VALUE_num(sk) ossl_OPENSSL_sk_num(ossl_ossl_check_const_CONF_VALUE_sk_type(sk))
#define ossl_sk_CONF_VALUE_value(sk, idx) ((ossl_CONF_VALUE *)ossl_OPENSSL_sk_value(ossl_ossl_check_const_CONF_VALUE_sk_type(sk), (idx)))
#define ossl_sk_CONF_VALUE_new(cmp) ((ossl_STACK_OF(ossl_CONF_VALUE) *)ossl_OPENSSL_sk_new(ossl_ossl_check_CONF_VALUE_compfunc_type(cmp)))
#define ossl_sk_CONF_VALUE_new_null() ((ossl_STACK_OF(ossl_CONF_VALUE) *)ossl_OPENSSL_sk_new_null())
#define ossl_sk_CONF_VALUE_new_reserve(cmp, n) ((ossl_STACK_OF(ossl_CONF_VALUE) *)ossl_OPENSSL_sk_new_reserve(ossl_ossl_check_CONF_VALUE_compfunc_type(cmp), (n)))
#define ossl_sk_CONF_VALUE_reserve(sk, n) ossl_OPENSSL_sk_reserve(ossl_ossl_check_CONF_VALUE_sk_type(sk), (n))
#define ossl_sk_CONF_VALUE_free(sk) ossl_OPENSSL_sk_free(ossl_ossl_check_CONF_VALUE_sk_type(sk))
#define ossl_sk_CONF_VALUE_zero(sk) ossl_OPENSSL_sk_zero(ossl_ossl_check_CONF_VALUE_sk_type(sk))
#define ossl_sk_CONF_VALUE_delete(sk, i) ((ossl_CONF_VALUE *)ossl_OPENSSL_sk_delete(ossl_ossl_check_CONF_VALUE_sk_type(sk), (i)))
#define ossl_sk_CONF_VALUE_delete_ptr(sk, ptr) ((ossl_CONF_VALUE *)ossl_OPENSSL_sk_delete_ptr(ossl_ossl_check_CONF_VALUE_sk_type(sk), ossl_ossl_check_CONF_VALUE_type(ptr)))
#define ossl_sk_CONF_VALUE_push(sk, ptr) ossl_OPENSSL_sk_push(ossl_ossl_check_CONF_VALUE_sk_type(sk), ossl_ossl_check_CONF_VALUE_type(ptr))
#define ossl_sk_CONF_VALUE_unshift(sk, ptr) ossl_OPENSSL_sk_unshift(ossl_ossl_check_CONF_VALUE_sk_type(sk), ossl_ossl_check_CONF_VALUE_type(ptr))
#define ossl_sk_CONF_VALUE_pop(sk) ((ossl_CONF_VALUE *)ossl_OPENSSL_sk_pop(ossl_ossl_check_CONF_VALUE_sk_type(sk)))
#define ossl_sk_CONF_VALUE_shift(sk) ((ossl_CONF_VALUE *)ossl_OPENSSL_sk_shift(ossl_ossl_check_CONF_VALUE_sk_type(sk)))
#define ossl_sk_CONF_VALUE_pop_free(sk, freefunc) ossl_OPENSSL_sk_pop_free(ossl_ossl_check_CONF_VALUE_sk_type(sk),ossl_ossl_check_CONF_VALUE_freefunc_type(freefunc))
#define ossl_sk_CONF_VALUE_insert(sk, ptr, idx) ossl_OPENSSL_sk_insert(ossl_ossl_check_CONF_VALUE_sk_type(sk), ossl_ossl_check_CONF_VALUE_type(ptr), (idx))
#define ossl_sk_CONF_VALUE_set(sk, idx, ptr) ((ossl_CONF_VALUE *)ossl_OPENSSL_sk_set(ossl_ossl_check_CONF_VALUE_sk_type(sk), (idx), ossl_ossl_check_CONF_VALUE_type(ptr)))
#define ossl_sk_CONF_VALUE_find(sk, ptr) ossl_OPENSSL_sk_find(ossl_ossl_check_CONF_VALUE_sk_type(sk), ossl_ossl_check_CONF_VALUE_type(ptr))
#define ossl_sk_CONF_VALUE_find_ex(sk, ptr) ossl_OPENSSL_sk_find_ex(ossl_ossl_check_CONF_VALUE_sk_type(sk), ossl_ossl_check_CONF_VALUE_type(ptr))
#define ossl_sk_CONF_VALUE_find_all(sk, ptr, pnum) ossl_OPENSSL_sk_find_all(ossl_ossl_check_CONF_VALUE_sk_type(sk), ossl_ossl_check_CONF_VALUE_type(ptr), pnum)
#define ossl_sk_CONF_VALUE_sort(sk) ossl_OPENSSL_sk_sort(ossl_ossl_check_CONF_VALUE_sk_type(sk))
#define ossl_sk_CONF_VALUE_is_sorted(sk) ossl_OPENSSL_sk_is_sorted(ossl_ossl_check_const_CONF_VALUE_sk_type(sk))
#define ossl_sk_CONF_VALUE_dup(sk) ((ossl_STACK_OF(ossl_CONF_VALUE) *)ossl_OPENSSL_sk_dup(ossl_ossl_check_const_CONF_VALUE_sk_type(sk)))
#define ossl_sk_CONF_VALUE_deep_copy(sk, copyfunc, freefunc) ((ossl_STACK_OF(ossl_CONF_VALUE) *)ossl_OPENSSL_sk_deep_copy(ossl_ossl_check_const_CONF_VALUE_sk_type(sk), ossl_ossl_check_CONF_VALUE_copyfunc_type(copyfunc), ossl_ossl_check_CONF_VALUE_freefunc_type(freefunc)))
#define ossl_sk_CONF_VALUE_set_cmp_func(sk, cmp) ((ossl_sk_CONF_VALUE_compfunc)ossl_OPENSSL_sk_set_cmp_func(ossl_ossl_check_CONF_VALUE_sk_type(sk), ossl_ossl_check_CONF_VALUE_compfunc_type(cmp)))
ossl_DEFINE_LHASH_OF_INTERNAL(ossl_CONF_VALUE);
#define ossl_lh_CONF_VALUE_new(hfn, cmp) ((ossl_LHASH_OF(ossl_CONF_VALUE) *)ossl_OPENSSL_LH_new(ossl_ossl_check_CONF_VALUE_lh_hashfunc_type(hfn), ossl_ossl_check_CONF_VALUE_lh_compfunc_type(cmp)))
#define ossl_lh_CONF_VALUE_free(lh) ossl_OPENSSL_LH_free(ossl_ossl_check_CONF_VALUE_lh_type(lh))
#define ossl_lh_CONF_VALUE_flush(lh) ossl_OPENSSL_LH_flush(ossl_ossl_check_CONF_VALUE_lh_type(lh))
#define ossl_lh_CONF_VALUE_insert(lh, ptr) ((ossl_CONF_VALUE *)ossl_OPENSSL_LH_insert(ossl_ossl_check_CONF_VALUE_lh_type(lh), ossl_ossl_check_CONF_VALUE_lh_plain_type(ptr)))
#define ossl_lh_CONF_VALUE_delete(lh, ptr) ((ossl_CONF_VALUE *)ossl_OPENSSL_LH_delete(ossl_ossl_check_CONF_VALUE_lh_type(lh), ossl_ossl_check_const_CONF_VALUE_lh_plain_type(ptr)))
#define ossl_lh_CONF_VALUE_retrieve(lh, ptr) ((ossl_CONF_VALUE *)ossl_OPENSSL_LH_retrieve(ossl_ossl_check_CONF_VALUE_lh_type(lh), ossl_ossl_check_const_CONF_VALUE_lh_plain_type(ptr)))
#define ossl_lh_CONF_VALUE_error(lh) ossl_OPENSSL_LH_error(ossl_ossl_check_CONF_VALUE_lh_type(lh))
#define ossl_lh_CONF_VALUE_num_items(lh) ossl_OPENSSL_LH_num_items(ossl_ossl_check_CONF_VALUE_lh_type(lh))
#define ossl_lh_CONF_VALUE_node_stats_bio(lh, out) ossl_OPENSSL_LH_node_stats_bio(ossl_ossl_check_const_CONF_VALUE_lh_type(lh), out)
#define ossl_lh_CONF_VALUE_node_usage_stats_bio(lh, out) ossl_OPENSSL_LH_node_usage_stats_bio(ossl_ossl_check_const_CONF_VALUE_lh_type(lh), out)
#define ossl_lh_CONF_VALUE_stats_bio(lh, out) ossl_OPENSSL_LH_stats_bio(ossl_ossl_check_const_CONF_VALUE_lh_type(lh), out)
#define ossl_lh_CONF_VALUE_get_down_load(lh) ossl_OPENSSL_LH_get_down_load(ossl_ossl_check_CONF_VALUE_lh_type(lh))
#define ossl_lh_CONF_VALUE_set_down_load(lh, dl) ossl_OPENSSL_LH_set_down_load(ossl_ossl_check_CONF_VALUE_lh_type(lh), dl)
#define ossl_lh_CONF_VALUE_doall(lh, dfn) ossl_OPENSSL_LH_doall(ossl_ossl_check_CONF_VALUE_lh_type(lh), ossl_ossl_check_CONF_VALUE_lh_doallfunc_type(dfn))


struct ossl_conf_st;
struct ossl_conf_method_st;
typedef struct ossl_conf_method_st ossl_CONF_METHOD;

# ifndef ossl_OPENSSL_NO_DEPRECATED_3_0
#  include "ossl/openssl/conftypes.h"
# endif

/* Module definitions */
typedef struct ossl_conf_imodule_st ossl_CONF_IMODULE;
typedef struct ossl_conf_module_st ossl_CONF_MODULE;

ossl_STACK_OF(ossl_CONF_MODULE);
ossl_STACK_OF(ossl_CONF_IMODULE);

/* DSO module function typedefs */
typedef int ossl_conf_init_func (ossl_CONF_IMODULE *md, const ossl_CONF *cnf);
typedef void ossl_conf_finish_func (ossl_CONF_IMODULE *md);

# define ossl_CONF_MFLAGS_IGNORE_ERRORS       0x1
# define ossl_CONF_MFLAGS_IGNORE_RETURN_CODES 0x2
# define ossl_CONF_MFLAGS_SILENT              0x4
# define ossl_CONF_MFLAGS_NO_DSO              0x8
# define ossl_CONF_MFLAGS_IGNORE_MISSING_FILE 0x10
# define ossl_CONF_MFLAGS_DEFAULT_SECTION     0x20

int ossl_CONF_set_default_method(ossl_CONF_METHOD *meth);
void ossl_CONF_set_nconf(ossl_CONF *conf, ossl_LHASH_OF(ossl_CONF_VALUE) *hash);
ossl_LHASH_OF(ossl_CONF_VALUE) *ossl_CONF_load(ossl_LHASH_OF(ossl_CONF_VALUE) *conf, const char *file,
                                long *eline);
# ifndef ossl_OPENSSL_NO_STDIO
ossl_LHASH_OF(ossl_CONF_VALUE) *ossl_CONF_load_fp(ossl_LHASH_OF(ossl_CONF_VALUE) *conf, FILE *fp,
                                   long *eline);
# endif
ossl_LHASH_OF(ossl_CONF_VALUE) *ossl_CONF_load_bio(ossl_LHASH_OF(ossl_CONF_VALUE) *conf, ossl_BIO *bp,
                                    long *eline);
ossl_STACK_OF(ossl_CONF_VALUE) *ossl_CONF_get_section(ossl_LHASH_OF(ossl_CONF_VALUE) *conf,
                                       const char *section);
char *ossl_CONF_get_string(ossl_LHASH_OF(ossl_CONF_VALUE) *conf, const char *group,
                      const char *name);
long ossl_CONF_get_number(ossl_LHASH_OF(ossl_CONF_VALUE) *conf, const char *group,
                     const char *name);
void ossl_CONF_free(ossl_LHASH_OF(ossl_CONF_VALUE) *conf);
#ifndef ossl_OPENSSL_NO_STDIO
int ossl_CONF_dump_fp(ossl_LHASH_OF(ossl_CONF_VALUE) *conf, FILE *out);
#endif
int ossl_CONF_dump_bio(ossl_LHASH_OF(ossl_CONF_VALUE) *conf, ossl_BIO *out);
#ifndef ossl_OPENSSL_NO_DEPRECATED_1_1_0
ossl_OSSL_DEPRECATEDIN_1_1_0 void ossl_OPENSSL_config(const char *config_name);
#endif

#ifndef ossl_OPENSSL_NO_DEPRECATED_1_1_0
# define ossl_OPENSSL_no_config() \
    ossl_OPENSSL_init_crypto(ossl_OPENSSL_INIT_NO_LOAD_CONFIG, NULL)
#endif

/*
 * New conf code.  The semantics are different from the functions above. If
 * that wasn't the case, the above functions would have been replaced
 */

ossl_CONF *ossl_NCONF_new_ex(ossl_OSSL_LIB_CTX *libctx, ossl_CONF_METHOD *meth);
ossl_OSSL_LIB_CTX *ossl_NCONF_get0_libctx(const ossl_CONF *conf);
ossl_CONF *ossl_NCONF_new(ossl_CONF_METHOD *meth);
ossl_CONF_METHOD *ossl_NCONF_default(void);
#ifndef ossl_OPENSSL_NO_DEPRECATED_3_0
ossl_OSSL_DEPRECATEDIN_3_0 ossl_CONF_METHOD *ossl_NCONF_WIN32(void);
#endif
void ossl_NCONF_free(ossl_CONF *conf);
void ossl_NCONF_free_data(ossl_CONF *conf);

int ossl_NCONF_load(ossl_CONF *conf, const char *file, long *eline);
# ifndef ossl_OPENSSL_NO_STDIO
int ossl_NCONF_load_fp(ossl_CONF *conf, FILE *fp, long *eline);
# endif
int ossl_NCONF_load_bio(ossl_CONF *conf, ossl_BIO *bp, long *eline);
ossl_STACK_OF(ossl_OPENSSL_CSTRING) *ossl_NCONF_get_section_names(const ossl_CONF *conf);
ossl_STACK_OF(ossl_CONF_VALUE) *ossl_NCONF_get_section(const ossl_CONF *conf,
                                        const char *section);
char *ossl_NCONF_get_string(const ossl_CONF *conf, const char *group, const char *name);
int ossl_NCONF_get_number_e(const ossl_CONF *conf, const char *group, const char *name,
                       long *result);
#ifndef ossl_OPENSSL_NO_STDIO
int ossl_NCONF_dump_fp(const ossl_CONF *conf, FILE *out);
#endif
int ossl_NCONF_dump_bio(const ossl_CONF *conf, ossl_BIO *out);

#define ossl_NCONF_get_number(c,g,n,r) ossl_NCONF_get_number_e(c,g,n,r)

/* Module functions */

int ossl_CONF_modules_load(const ossl_CONF *cnf, const char *appname,
                      unsigned long flags);
int ossl_CONF_modules_load_file_ex(ossl_OSSL_LIB_CTX *libctx, const char *filename,
                              const char *appname, unsigned long flags);
int ossl_CONF_modules_load_file(const char *filename, const char *appname,
                           unsigned long flags);
void ossl_CONF_modules_unload(int all);
void ossl_CONF_modules_finish(void);
#ifndef ossl_OPENSSL_NO_DEPRECATED_1_1_0
# define ossl_CONF_modules_free() while(0) continue
#endif
int ossl_CONF_module_add(const char *name, ossl_conf_init_func *ifunc,
                    ossl_conf_finish_func *ffunc);

const char *ossl_CONF_imodule_get_name(const ossl_CONF_IMODULE *md);
const char *ossl_CONF_imodule_get_value(const ossl_CONF_IMODULE *md);
void *ossl_CONF_imodule_get_usr_data(const ossl_CONF_IMODULE *md);
void ossl_CONF_imodule_set_usr_data(ossl_CONF_IMODULE *md, void *usr_data);
ossl_CONF_MODULE *ossl_CONF_imodule_get_module(const ossl_CONF_IMODULE *md);
unsigned long ossl_CONF_imodule_get_flags(const ossl_CONF_IMODULE *md);
void ossl_CONF_imodule_set_flags(ossl_CONF_IMODULE *md, unsigned long flags);
void *ossl_CONF_module_get_usr_data(ossl_CONF_MODULE *pmod);
void ossl_CONF_module_set_usr_data(ossl_CONF_MODULE *pmod, void *usr_data);

char *ossl_CONF_get1_default_config_file(void);

int ossl_CONF_parse_list(const char *list, int sep, int nospc,
                    int (*list_cb) (const char *elem, int len, void *usr),
                    void *arg);

void ossl_OPENSSL_load_builtin_modules(void);


# ifdef  __cplusplus
}
# endif
#endif
