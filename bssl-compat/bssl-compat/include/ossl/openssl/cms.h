/*
 * WARNING: do not edit!
 * Generated by Makefile from ../../../openssl/source/include/openssl/cms.h.in
 *
 * Copyright 2008-2021 The OpenSSL Project Authors. All Rights Reserved.
 *
 * Licensed under the Apache License 2.0 (the "License").  You may not use
 * this file except in compliance with the License.  You can obtain a copy
 * in the file LICENSE in the source distribution or at
 * https://www.openssl.org/source/license.html
 */



#ifndef ossl_OPENSSL_CMS_H
# define ossl_OPENSSL_CMS_H
# pragma once

# include "ossl/openssl/macros.h"
# ifndef ossl_OPENSSL_NO_DEPRECATED_3_0
#  define ossl_HEADER_CMS_H
# endif

# include "ossl/openssl/opensslconf.h"

# ifndef ossl_OPENSSL_NO_CMS
# include "ossl/openssl/x509.h"
# include "ossl/openssl/x509v3.h"
# include "ossl/openssl/cmserr.h"
# ifdef __cplusplus
extern "C" {
# endif

typedef struct ossl_CMS_ContentInfo_st ossl_CMS_ContentInfo;
typedef struct ossl_CMS_SignerInfo_st ossl_CMS_SignerInfo;
typedef struct ossl_CMS_CertificateChoices ossl_CMS_CertificateChoices;
typedef struct ossl_CMS_RevocationInfoChoice_st ossl_CMS_RevocationInfoChoice;
typedef struct ossl_CMS_RecipientInfo_st ossl_CMS_RecipientInfo;
typedef struct ossl_CMS_ReceiptRequest_st ossl_CMS_ReceiptRequest;
typedef struct ossl_CMS_Receipt_st ossl_CMS_Receipt;
typedef struct ossl_CMS_RecipientEncryptedKey_st ossl_CMS_RecipientEncryptedKey;
typedef struct ossl_CMS_OtherKeyAttribute_st ossl_CMS_OtherKeyAttribute;

ossl_SKM_DEFINE_STACK_OF_INTERNAL(ossl_CMS_SignerInfo, ossl_CMS_SignerInfo, ossl_CMS_SignerInfo)
#define ossl_sk_CMS_SignerInfo_num(sk) ossl_OPENSSL_sk_num(ossl_ossl_check_const_CMS_SignerInfo_sk_type(sk))
#define ossl_sk_CMS_SignerInfo_value(sk, idx) ((ossl_CMS_SignerInfo *)ossl_OPENSSL_sk_value(ossl_ossl_check_const_CMS_SignerInfo_sk_type(sk), (idx)))
#define ossl_sk_CMS_SignerInfo_new(cmp) ((ossl_STACK_OF(ossl_CMS_SignerInfo) *)ossl_OPENSSL_sk_new(ossl_ossl_check_CMS_SignerInfo_compfunc_type(cmp)))
#define ossl_sk_CMS_SignerInfo_new_null() ((ossl_STACK_OF(ossl_CMS_SignerInfo) *)ossl_OPENSSL_sk_new_null())
#define ossl_sk_CMS_SignerInfo_new_reserve(cmp, n) ((ossl_STACK_OF(ossl_CMS_SignerInfo) *)ossl_OPENSSL_sk_new_reserve(ossl_ossl_check_CMS_SignerInfo_compfunc_type(cmp), (n)))
#define ossl_sk_CMS_SignerInfo_reserve(sk, n) ossl_OPENSSL_sk_reserve(ossl_ossl_check_CMS_SignerInfo_sk_type(sk), (n))
#define ossl_sk_CMS_SignerInfo_free(sk) ossl_OPENSSL_sk_free(ossl_ossl_check_CMS_SignerInfo_sk_type(sk))
#define ossl_sk_CMS_SignerInfo_zero(sk) ossl_OPENSSL_sk_zero(ossl_ossl_check_CMS_SignerInfo_sk_type(sk))
#define ossl_sk_CMS_SignerInfo_delete(sk, i) ((ossl_CMS_SignerInfo *)ossl_OPENSSL_sk_delete(ossl_ossl_check_CMS_SignerInfo_sk_type(sk), (i)))
#define ossl_sk_CMS_SignerInfo_delete_ptr(sk, ptr) ((ossl_CMS_SignerInfo *)ossl_OPENSSL_sk_delete_ptr(ossl_ossl_check_CMS_SignerInfo_sk_type(sk), ossl_ossl_check_CMS_SignerInfo_type(ptr)))
#define ossl_sk_CMS_SignerInfo_push(sk, ptr) ossl_OPENSSL_sk_push(ossl_ossl_check_CMS_SignerInfo_sk_type(sk), ossl_ossl_check_CMS_SignerInfo_type(ptr))
#define ossl_sk_CMS_SignerInfo_unshift(sk, ptr) ossl_OPENSSL_sk_unshift(ossl_ossl_check_CMS_SignerInfo_sk_type(sk), ossl_ossl_check_CMS_SignerInfo_type(ptr))
#define ossl_sk_CMS_SignerInfo_pop(sk) ((ossl_CMS_SignerInfo *)ossl_OPENSSL_sk_pop(ossl_ossl_check_CMS_SignerInfo_sk_type(sk)))
#define ossl_sk_CMS_SignerInfo_shift(sk) ((ossl_CMS_SignerInfo *)ossl_OPENSSL_sk_shift(ossl_ossl_check_CMS_SignerInfo_sk_type(sk)))
#define ossl_sk_CMS_SignerInfo_pop_free(sk, freefunc) ossl_OPENSSL_sk_pop_free(ossl_ossl_check_CMS_SignerInfo_sk_type(sk),ossl_ossl_check_CMS_SignerInfo_freefunc_type(freefunc))
#define ossl_sk_CMS_SignerInfo_insert(sk, ptr, idx) ossl_OPENSSL_sk_insert(ossl_ossl_check_CMS_SignerInfo_sk_type(sk), ossl_ossl_check_CMS_SignerInfo_type(ptr), (idx))
#define ossl_sk_CMS_SignerInfo_set(sk, idx, ptr) ((ossl_CMS_SignerInfo *)ossl_OPENSSL_sk_set(ossl_ossl_check_CMS_SignerInfo_sk_type(sk), (idx), ossl_ossl_check_CMS_SignerInfo_type(ptr)))
#define ossl_sk_CMS_SignerInfo_find(sk, ptr) ossl_OPENSSL_sk_find(ossl_ossl_check_CMS_SignerInfo_sk_type(sk), ossl_ossl_check_CMS_SignerInfo_type(ptr))
#define ossl_sk_CMS_SignerInfo_find_ex(sk, ptr) ossl_OPENSSL_sk_find_ex(ossl_ossl_check_CMS_SignerInfo_sk_type(sk), ossl_ossl_check_CMS_SignerInfo_type(ptr))
#define ossl_sk_CMS_SignerInfo_find_all(sk, ptr, pnum) ossl_OPENSSL_sk_find_all(ossl_ossl_check_CMS_SignerInfo_sk_type(sk), ossl_ossl_check_CMS_SignerInfo_type(ptr), pnum)
#define ossl_sk_CMS_SignerInfo_sort(sk) ossl_OPENSSL_sk_sort(ossl_ossl_check_CMS_SignerInfo_sk_type(sk))
#define ossl_sk_CMS_SignerInfo_is_sorted(sk) ossl_OPENSSL_sk_is_sorted(ossl_ossl_check_const_CMS_SignerInfo_sk_type(sk))
#define ossl_sk_CMS_SignerInfo_dup(sk) ((ossl_STACK_OF(ossl_CMS_SignerInfo) *)ossl_OPENSSL_sk_dup(ossl_ossl_check_const_CMS_SignerInfo_sk_type(sk)))
#define ossl_sk_CMS_SignerInfo_deep_copy(sk, copyfunc, freefunc) ((ossl_STACK_OF(ossl_CMS_SignerInfo) *)ossl_OPENSSL_sk_deep_copy(ossl_ossl_check_const_CMS_SignerInfo_sk_type(sk), ossl_ossl_check_CMS_SignerInfo_copyfunc_type(copyfunc), ossl_ossl_check_CMS_SignerInfo_freefunc_type(freefunc)))
#define ossl_sk_CMS_SignerInfo_set_cmp_func(sk, cmp) ((ossl_sk_CMS_SignerInfo_compfunc)ossl_OPENSSL_sk_set_cmp_func(ossl_ossl_check_CMS_SignerInfo_sk_type(sk), ossl_ossl_check_CMS_SignerInfo_compfunc_type(cmp)))
ossl_SKM_DEFINE_STACK_OF_INTERNAL(ossl_CMS_RecipientEncryptedKey, ossl_CMS_RecipientEncryptedKey, ossl_CMS_RecipientEncryptedKey)
#define ossl_sk_CMS_RecipientEncryptedKey_num(sk) ossl_OPENSSL_sk_num(ossl_ossl_check_const_CMS_RecipientEncryptedKey_sk_type(sk))
#define ossl_sk_CMS_RecipientEncryptedKey_value(sk, idx) ((ossl_CMS_RecipientEncryptedKey *)ossl_OPENSSL_sk_value(ossl_ossl_check_const_CMS_RecipientEncryptedKey_sk_type(sk), (idx)))
#define ossl_sk_CMS_RecipientEncryptedKey_new(cmp) ((ossl_STACK_OF(ossl_CMS_RecipientEncryptedKey) *)ossl_OPENSSL_sk_new(ossl_ossl_check_CMS_RecipientEncryptedKey_compfunc_type(cmp)))
#define ossl_sk_CMS_RecipientEncryptedKey_new_null() ((ossl_STACK_OF(ossl_CMS_RecipientEncryptedKey) *)ossl_OPENSSL_sk_new_null())
#define ossl_sk_CMS_RecipientEncryptedKey_new_reserve(cmp, n) ((ossl_STACK_OF(ossl_CMS_RecipientEncryptedKey) *)ossl_OPENSSL_sk_new_reserve(ossl_ossl_check_CMS_RecipientEncryptedKey_compfunc_type(cmp), (n)))
#define ossl_sk_CMS_RecipientEncryptedKey_reserve(sk, n) ossl_OPENSSL_sk_reserve(ossl_ossl_check_CMS_RecipientEncryptedKey_sk_type(sk), (n))
#define ossl_sk_CMS_RecipientEncryptedKey_free(sk) ossl_OPENSSL_sk_free(ossl_ossl_check_CMS_RecipientEncryptedKey_sk_type(sk))
#define ossl_sk_CMS_RecipientEncryptedKey_zero(sk) ossl_OPENSSL_sk_zero(ossl_ossl_check_CMS_RecipientEncryptedKey_sk_type(sk))
#define ossl_sk_CMS_RecipientEncryptedKey_delete(sk, i) ((ossl_CMS_RecipientEncryptedKey *)ossl_OPENSSL_sk_delete(ossl_ossl_check_CMS_RecipientEncryptedKey_sk_type(sk), (i)))
#define ossl_sk_CMS_RecipientEncryptedKey_delete_ptr(sk, ptr) ((ossl_CMS_RecipientEncryptedKey *)ossl_OPENSSL_sk_delete_ptr(ossl_ossl_check_CMS_RecipientEncryptedKey_sk_type(sk), ossl_ossl_check_CMS_RecipientEncryptedKey_type(ptr)))
#define ossl_sk_CMS_RecipientEncryptedKey_push(sk, ptr) ossl_OPENSSL_sk_push(ossl_ossl_check_CMS_RecipientEncryptedKey_sk_type(sk), ossl_ossl_check_CMS_RecipientEncryptedKey_type(ptr))
#define ossl_sk_CMS_RecipientEncryptedKey_unshift(sk, ptr) ossl_OPENSSL_sk_unshift(ossl_ossl_check_CMS_RecipientEncryptedKey_sk_type(sk), ossl_ossl_check_CMS_RecipientEncryptedKey_type(ptr))
#define ossl_sk_CMS_RecipientEncryptedKey_pop(sk) ((ossl_CMS_RecipientEncryptedKey *)ossl_OPENSSL_sk_pop(ossl_ossl_check_CMS_RecipientEncryptedKey_sk_type(sk)))
#define ossl_sk_CMS_RecipientEncryptedKey_shift(sk) ((ossl_CMS_RecipientEncryptedKey *)ossl_OPENSSL_sk_shift(ossl_ossl_check_CMS_RecipientEncryptedKey_sk_type(sk)))
#define ossl_sk_CMS_RecipientEncryptedKey_pop_free(sk, freefunc) ossl_OPENSSL_sk_pop_free(ossl_ossl_check_CMS_RecipientEncryptedKey_sk_type(sk),ossl_ossl_check_CMS_RecipientEncryptedKey_freefunc_type(freefunc))
#define ossl_sk_CMS_RecipientEncryptedKey_insert(sk, ptr, idx) ossl_OPENSSL_sk_insert(ossl_ossl_check_CMS_RecipientEncryptedKey_sk_type(sk), ossl_ossl_check_CMS_RecipientEncryptedKey_type(ptr), (idx))
#define ossl_sk_CMS_RecipientEncryptedKey_set(sk, idx, ptr) ((ossl_CMS_RecipientEncryptedKey *)ossl_OPENSSL_sk_set(ossl_ossl_check_CMS_RecipientEncryptedKey_sk_type(sk), (idx), ossl_ossl_check_CMS_RecipientEncryptedKey_type(ptr)))
#define ossl_sk_CMS_RecipientEncryptedKey_find(sk, ptr) ossl_OPENSSL_sk_find(ossl_ossl_check_CMS_RecipientEncryptedKey_sk_type(sk), ossl_ossl_check_CMS_RecipientEncryptedKey_type(ptr))
#define ossl_sk_CMS_RecipientEncryptedKey_find_ex(sk, ptr) ossl_OPENSSL_sk_find_ex(ossl_ossl_check_CMS_RecipientEncryptedKey_sk_type(sk), ossl_ossl_check_CMS_RecipientEncryptedKey_type(ptr))
#define ossl_sk_CMS_RecipientEncryptedKey_find_all(sk, ptr, pnum) ossl_OPENSSL_sk_find_all(ossl_ossl_check_CMS_RecipientEncryptedKey_sk_type(sk), ossl_ossl_check_CMS_RecipientEncryptedKey_type(ptr), pnum)
#define ossl_sk_CMS_RecipientEncryptedKey_sort(sk) ossl_OPENSSL_sk_sort(ossl_ossl_check_CMS_RecipientEncryptedKey_sk_type(sk))
#define ossl_sk_CMS_RecipientEncryptedKey_is_sorted(sk) ossl_OPENSSL_sk_is_sorted(ossl_ossl_check_const_CMS_RecipientEncryptedKey_sk_type(sk))
#define ossl_sk_CMS_RecipientEncryptedKey_dup(sk) ((ossl_STACK_OF(ossl_CMS_RecipientEncryptedKey) *)ossl_OPENSSL_sk_dup(ossl_ossl_check_const_CMS_RecipientEncryptedKey_sk_type(sk)))
#define ossl_sk_CMS_RecipientEncryptedKey_deep_copy(sk, copyfunc, freefunc) ((ossl_STACK_OF(ossl_CMS_RecipientEncryptedKey) *)ossl_OPENSSL_sk_deep_copy(ossl_ossl_check_const_CMS_RecipientEncryptedKey_sk_type(sk), ossl_ossl_check_CMS_RecipientEncryptedKey_copyfunc_type(copyfunc), ossl_ossl_check_CMS_RecipientEncryptedKey_freefunc_type(freefunc)))
#define ossl_sk_CMS_RecipientEncryptedKey_set_cmp_func(sk, cmp) ((ossl_sk_CMS_RecipientEncryptedKey_compfunc)ossl_OPENSSL_sk_set_cmp_func(ossl_ossl_check_CMS_RecipientEncryptedKey_sk_type(sk), ossl_ossl_check_CMS_RecipientEncryptedKey_compfunc_type(cmp)))
ossl_SKM_DEFINE_STACK_OF_INTERNAL(ossl_CMS_RecipientInfo, ossl_CMS_RecipientInfo, ossl_CMS_RecipientInfo)
#define ossl_sk_CMS_RecipientInfo_num(sk) ossl_OPENSSL_sk_num(ossl_ossl_check_const_CMS_RecipientInfo_sk_type(sk))
#define ossl_sk_CMS_RecipientInfo_value(sk, idx) ((ossl_CMS_RecipientInfo *)ossl_OPENSSL_sk_value(ossl_ossl_check_const_CMS_RecipientInfo_sk_type(sk), (idx)))
#define ossl_sk_CMS_RecipientInfo_new(cmp) ((ossl_STACK_OF(ossl_CMS_RecipientInfo) *)ossl_OPENSSL_sk_new(ossl_ossl_check_CMS_RecipientInfo_compfunc_type(cmp)))
#define ossl_sk_CMS_RecipientInfo_new_null() ((ossl_STACK_OF(ossl_CMS_RecipientInfo) *)ossl_OPENSSL_sk_new_null())
#define ossl_sk_CMS_RecipientInfo_new_reserve(cmp, n) ((ossl_STACK_OF(ossl_CMS_RecipientInfo) *)ossl_OPENSSL_sk_new_reserve(ossl_ossl_check_CMS_RecipientInfo_compfunc_type(cmp), (n)))
#define ossl_sk_CMS_RecipientInfo_reserve(sk, n) ossl_OPENSSL_sk_reserve(ossl_ossl_check_CMS_RecipientInfo_sk_type(sk), (n))
#define ossl_sk_CMS_RecipientInfo_free(sk) ossl_OPENSSL_sk_free(ossl_ossl_check_CMS_RecipientInfo_sk_type(sk))
#define ossl_sk_CMS_RecipientInfo_zero(sk) ossl_OPENSSL_sk_zero(ossl_ossl_check_CMS_RecipientInfo_sk_type(sk))
#define ossl_sk_CMS_RecipientInfo_delete(sk, i) ((ossl_CMS_RecipientInfo *)ossl_OPENSSL_sk_delete(ossl_ossl_check_CMS_RecipientInfo_sk_type(sk), (i)))
#define ossl_sk_CMS_RecipientInfo_delete_ptr(sk, ptr) ((ossl_CMS_RecipientInfo *)ossl_OPENSSL_sk_delete_ptr(ossl_ossl_check_CMS_RecipientInfo_sk_type(sk), ossl_ossl_check_CMS_RecipientInfo_type(ptr)))
#define ossl_sk_CMS_RecipientInfo_push(sk, ptr) ossl_OPENSSL_sk_push(ossl_ossl_check_CMS_RecipientInfo_sk_type(sk), ossl_ossl_check_CMS_RecipientInfo_type(ptr))
#define ossl_sk_CMS_RecipientInfo_unshift(sk, ptr) ossl_OPENSSL_sk_unshift(ossl_ossl_check_CMS_RecipientInfo_sk_type(sk), ossl_ossl_check_CMS_RecipientInfo_type(ptr))
#define ossl_sk_CMS_RecipientInfo_pop(sk) ((ossl_CMS_RecipientInfo *)ossl_OPENSSL_sk_pop(ossl_ossl_check_CMS_RecipientInfo_sk_type(sk)))
#define ossl_sk_CMS_RecipientInfo_shift(sk) ((ossl_CMS_RecipientInfo *)ossl_OPENSSL_sk_shift(ossl_ossl_check_CMS_RecipientInfo_sk_type(sk)))
#define ossl_sk_CMS_RecipientInfo_pop_free(sk, freefunc) ossl_OPENSSL_sk_pop_free(ossl_ossl_check_CMS_RecipientInfo_sk_type(sk),ossl_ossl_check_CMS_RecipientInfo_freefunc_type(freefunc))
#define ossl_sk_CMS_RecipientInfo_insert(sk, ptr, idx) ossl_OPENSSL_sk_insert(ossl_ossl_check_CMS_RecipientInfo_sk_type(sk), ossl_ossl_check_CMS_RecipientInfo_type(ptr), (idx))
#define ossl_sk_CMS_RecipientInfo_set(sk, idx, ptr) ((ossl_CMS_RecipientInfo *)ossl_OPENSSL_sk_set(ossl_ossl_check_CMS_RecipientInfo_sk_type(sk), (idx), ossl_ossl_check_CMS_RecipientInfo_type(ptr)))
#define ossl_sk_CMS_RecipientInfo_find(sk, ptr) ossl_OPENSSL_sk_find(ossl_ossl_check_CMS_RecipientInfo_sk_type(sk), ossl_ossl_check_CMS_RecipientInfo_type(ptr))
#define ossl_sk_CMS_RecipientInfo_find_ex(sk, ptr) ossl_OPENSSL_sk_find_ex(ossl_ossl_check_CMS_RecipientInfo_sk_type(sk), ossl_ossl_check_CMS_RecipientInfo_type(ptr))
#define ossl_sk_CMS_RecipientInfo_find_all(sk, ptr, pnum) ossl_OPENSSL_sk_find_all(ossl_ossl_check_CMS_RecipientInfo_sk_type(sk), ossl_ossl_check_CMS_RecipientInfo_type(ptr), pnum)
#define ossl_sk_CMS_RecipientInfo_sort(sk) ossl_OPENSSL_sk_sort(ossl_ossl_check_CMS_RecipientInfo_sk_type(sk))
#define ossl_sk_CMS_RecipientInfo_is_sorted(sk) ossl_OPENSSL_sk_is_sorted(ossl_ossl_check_const_CMS_RecipientInfo_sk_type(sk))
#define ossl_sk_CMS_RecipientInfo_dup(sk) ((ossl_STACK_OF(ossl_CMS_RecipientInfo) *)ossl_OPENSSL_sk_dup(ossl_ossl_check_const_CMS_RecipientInfo_sk_type(sk)))
#define ossl_sk_CMS_RecipientInfo_deep_copy(sk, copyfunc, freefunc) ((ossl_STACK_OF(ossl_CMS_RecipientInfo) *)ossl_OPENSSL_sk_deep_copy(ossl_ossl_check_const_CMS_RecipientInfo_sk_type(sk), ossl_ossl_check_CMS_RecipientInfo_copyfunc_type(copyfunc), ossl_ossl_check_CMS_RecipientInfo_freefunc_type(freefunc)))
#define ossl_sk_CMS_RecipientInfo_set_cmp_func(sk, cmp) ((ossl_sk_CMS_RecipientInfo_compfunc)ossl_OPENSSL_sk_set_cmp_func(ossl_ossl_check_CMS_RecipientInfo_sk_type(sk), ossl_ossl_check_CMS_RecipientInfo_compfunc_type(cmp)))
ossl_SKM_DEFINE_STACK_OF_INTERNAL(ossl_CMS_RevocationInfoChoice, ossl_CMS_RevocationInfoChoice, ossl_CMS_RevocationInfoChoice)
#define ossl_sk_CMS_RevocationInfoChoice_num(sk) ossl_OPENSSL_sk_num(ossl_ossl_check_const_CMS_RevocationInfoChoice_sk_type(sk))
#define ossl_sk_CMS_RevocationInfoChoice_value(sk, idx) ((ossl_CMS_RevocationInfoChoice *)ossl_OPENSSL_sk_value(ossl_ossl_check_const_CMS_RevocationInfoChoice_sk_type(sk), (idx)))
#define ossl_sk_CMS_RevocationInfoChoice_new(cmp) ((ossl_STACK_OF(ossl_CMS_RevocationInfoChoice) *)ossl_OPENSSL_sk_new(ossl_ossl_check_CMS_RevocationInfoChoice_compfunc_type(cmp)))
#define ossl_sk_CMS_RevocationInfoChoice_new_null() ((ossl_STACK_OF(ossl_CMS_RevocationInfoChoice) *)ossl_OPENSSL_sk_new_null())
#define ossl_sk_CMS_RevocationInfoChoice_new_reserve(cmp, n) ((ossl_STACK_OF(ossl_CMS_RevocationInfoChoice) *)ossl_OPENSSL_sk_new_reserve(ossl_ossl_check_CMS_RevocationInfoChoice_compfunc_type(cmp), (n)))
#define ossl_sk_CMS_RevocationInfoChoice_reserve(sk, n) ossl_OPENSSL_sk_reserve(ossl_ossl_check_CMS_RevocationInfoChoice_sk_type(sk), (n))
#define ossl_sk_CMS_RevocationInfoChoice_free(sk) ossl_OPENSSL_sk_free(ossl_ossl_check_CMS_RevocationInfoChoice_sk_type(sk))
#define ossl_sk_CMS_RevocationInfoChoice_zero(sk) ossl_OPENSSL_sk_zero(ossl_ossl_check_CMS_RevocationInfoChoice_sk_type(sk))
#define ossl_sk_CMS_RevocationInfoChoice_delete(sk, i) ((ossl_CMS_RevocationInfoChoice *)ossl_OPENSSL_sk_delete(ossl_ossl_check_CMS_RevocationInfoChoice_sk_type(sk), (i)))
#define ossl_sk_CMS_RevocationInfoChoice_delete_ptr(sk, ptr) ((ossl_CMS_RevocationInfoChoice *)ossl_OPENSSL_sk_delete_ptr(ossl_ossl_check_CMS_RevocationInfoChoice_sk_type(sk), ossl_ossl_check_CMS_RevocationInfoChoice_type(ptr)))
#define ossl_sk_CMS_RevocationInfoChoice_push(sk, ptr) ossl_OPENSSL_sk_push(ossl_ossl_check_CMS_RevocationInfoChoice_sk_type(sk), ossl_ossl_check_CMS_RevocationInfoChoice_type(ptr))
#define ossl_sk_CMS_RevocationInfoChoice_unshift(sk, ptr) ossl_OPENSSL_sk_unshift(ossl_ossl_check_CMS_RevocationInfoChoice_sk_type(sk), ossl_ossl_check_CMS_RevocationInfoChoice_type(ptr))
#define ossl_sk_CMS_RevocationInfoChoice_pop(sk) ((ossl_CMS_RevocationInfoChoice *)ossl_OPENSSL_sk_pop(ossl_ossl_check_CMS_RevocationInfoChoice_sk_type(sk)))
#define ossl_sk_CMS_RevocationInfoChoice_shift(sk) ((ossl_CMS_RevocationInfoChoice *)ossl_OPENSSL_sk_shift(ossl_ossl_check_CMS_RevocationInfoChoice_sk_type(sk)))
#define ossl_sk_CMS_RevocationInfoChoice_pop_free(sk, freefunc) ossl_OPENSSL_sk_pop_free(ossl_ossl_check_CMS_RevocationInfoChoice_sk_type(sk),ossl_ossl_check_CMS_RevocationInfoChoice_freefunc_type(freefunc))
#define ossl_sk_CMS_RevocationInfoChoice_insert(sk, ptr, idx) ossl_OPENSSL_sk_insert(ossl_ossl_check_CMS_RevocationInfoChoice_sk_type(sk), ossl_ossl_check_CMS_RevocationInfoChoice_type(ptr), (idx))
#define ossl_sk_CMS_RevocationInfoChoice_set(sk, idx, ptr) ((ossl_CMS_RevocationInfoChoice *)ossl_OPENSSL_sk_set(ossl_ossl_check_CMS_RevocationInfoChoice_sk_type(sk), (idx), ossl_ossl_check_CMS_RevocationInfoChoice_type(ptr)))
#define ossl_sk_CMS_RevocationInfoChoice_find(sk, ptr) ossl_OPENSSL_sk_find(ossl_ossl_check_CMS_RevocationInfoChoice_sk_type(sk), ossl_ossl_check_CMS_RevocationInfoChoice_type(ptr))
#define ossl_sk_CMS_RevocationInfoChoice_find_ex(sk, ptr) ossl_OPENSSL_sk_find_ex(ossl_ossl_check_CMS_RevocationInfoChoice_sk_type(sk), ossl_ossl_check_CMS_RevocationInfoChoice_type(ptr))
#define ossl_sk_CMS_RevocationInfoChoice_find_all(sk, ptr, pnum) ossl_OPENSSL_sk_find_all(ossl_ossl_check_CMS_RevocationInfoChoice_sk_type(sk), ossl_ossl_check_CMS_RevocationInfoChoice_type(ptr), pnum)
#define ossl_sk_CMS_RevocationInfoChoice_sort(sk) ossl_OPENSSL_sk_sort(ossl_ossl_check_CMS_RevocationInfoChoice_sk_type(sk))
#define ossl_sk_CMS_RevocationInfoChoice_is_sorted(sk) ossl_OPENSSL_sk_is_sorted(ossl_ossl_check_const_CMS_RevocationInfoChoice_sk_type(sk))
#define ossl_sk_CMS_RevocationInfoChoice_dup(sk) ((ossl_STACK_OF(ossl_CMS_RevocationInfoChoice) *)ossl_OPENSSL_sk_dup(ossl_ossl_check_const_CMS_RevocationInfoChoice_sk_type(sk)))
#define ossl_sk_CMS_RevocationInfoChoice_deep_copy(sk, copyfunc, freefunc) ((ossl_STACK_OF(ossl_CMS_RevocationInfoChoice) *)ossl_OPENSSL_sk_deep_copy(ossl_ossl_check_const_CMS_RevocationInfoChoice_sk_type(sk), ossl_ossl_check_CMS_RevocationInfoChoice_copyfunc_type(copyfunc), ossl_ossl_check_CMS_RevocationInfoChoice_freefunc_type(freefunc)))
#define ossl_sk_CMS_RevocationInfoChoice_set_cmp_func(sk, cmp) ((ossl_sk_CMS_RevocationInfoChoice_compfunc)ossl_OPENSSL_sk_set_cmp_func(ossl_ossl_check_CMS_RevocationInfoChoice_sk_type(sk), ossl_ossl_check_CMS_RevocationInfoChoice_compfunc_type(cmp)))


ossl_DECLARE_ASN1_FUNCTIONS(ossl_CMS_ContentInfo)
ossl_DECLARE_ASN1_FUNCTIONS(ossl_CMS_ReceiptRequest)
ossl_DECLARE_ASN1_PRINT_FUNCTION(ossl_CMS_ContentInfo)

ossl_CMS_ContentInfo *ossl_CMS_ContentInfo_new_ex(ossl_OSSL_LIB_CTX *libctx, const char *propq);

# define ossl_CMS_SIGNERINFO_ISSUER_SERIAL    0
# define ossl_CMS_SIGNERINFO_KEYIDENTIFIER    1

# define ossl_CMS_RECIPINFO_NONE              -1
# define ossl_CMS_RECIPINFO_TRANS             0
# define ossl_CMS_RECIPINFO_AGREE             1
# define ossl_CMS_RECIPINFO_KEK               2
# define ossl_CMS_RECIPINFO_PASS              3
# define ossl_CMS_RECIPINFO_OTHER             4

/* S/MIME related flags */

# define ossl_CMS_TEXT                        0x1
# define ossl_CMS_NOCERTS                     0x2
# define ossl_CMS_NO_CONTENT_VERIFY           0x4
# define ossl_CMS_NO_ATTR_VERIFY              0x8
# define ossl_CMS_NOSIGS                      \
                        (ossl_CMS_NO_CONTENT_VERIFY|ossl_CMS_NO_ATTR_VERIFY)
# define ossl_CMS_NOINTERN                    0x10
# define ossl_CMS_NO_SIGNER_CERT_VERIFY       0x20
# define ossl_CMS_NOVERIFY                    0x20
# define ossl_CMS_DETACHED                    0x40
# define ossl_CMS_BINARY                      0x80
# define ossl_CMS_NOATTR                      0x100
# define ossl_CMS_NOSMIMECAP                  0x200
# define ossl_CMS_NOOLDMIMETYPE               0x400
# define ossl_CMS_CRLFEOL                     0x800
# define ossl_CMS_STREAM                      0x1000
# define ossl_CMS_NOCRL                       0x2000
# define ossl_CMS_PARTIAL                     0x4000
# define ossl_CMS_REUSE_DIGEST                0x8000
# define ossl_CMS_USE_KEYID                   0x10000
# define ossl_CMS_DEBUG_DECRYPT               0x20000
# define ossl_CMS_KEY_PARAM                   0x40000
# define ossl_CMS_ASCIICRLF                   0x80000
# define ossl_CMS_CADES                       0x100000
# define ossl_CMS_USE_ORIGINATOR_KEYID        0x200000

const ossl_ASN1_OBJECT *ossl_CMS_get0_type(const ossl_CMS_ContentInfo *cms);

ossl_BIO *ossl_CMS_dataInit(ossl_CMS_ContentInfo *cms, ossl_BIO *icont);
int ossl_CMS_dataFinal(ossl_CMS_ContentInfo *cms, ossl_BIO *bio);

ossl_ASN1_OCTET_STRING **ossl_CMS_get0_content(ossl_CMS_ContentInfo *cms);
int ossl_CMS_is_detached(ossl_CMS_ContentInfo *cms);
int ossl_CMS_set_detached(ossl_CMS_ContentInfo *cms, int detached);

# ifdef ossl_OPENSSL_PEM_H
ossl_DECLARE_PEM_rw(CMS, ossl_CMS_ContentInfo)
# endif
int ossl_CMS_stream(unsigned char ***boundary, ossl_CMS_ContentInfo *cms);
ossl_CMS_ContentInfo *ossl_d2i_CMS_bio(ossl_BIO *bp, ossl_CMS_ContentInfo **cms);
int ossl_i2d_CMS_bio(ossl_BIO *bp, ossl_CMS_ContentInfo *cms);

ossl_BIO *ossl_BIO_new_CMS(ossl_BIO *out, ossl_CMS_ContentInfo *cms);
int ossl_i2d_CMS_bio_stream(ossl_BIO *out, ossl_CMS_ContentInfo *cms, ossl_BIO *in, int flags);
int ossl_PEM_write_bio_CMS_stream(ossl_BIO *out, ossl_CMS_ContentInfo *cms, ossl_BIO *in,
                             int flags);
ossl_CMS_ContentInfo *ossl_SMIME_read_CMS(ossl_BIO *bio, ossl_BIO **bcont);
ossl_CMS_ContentInfo *ossl_SMIME_read_CMS_ex(ossl_BIO *bio, int flags, ossl_BIO **bcont, ossl_CMS_ContentInfo **ci);
int ossl_SMIME_write_CMS(ossl_BIO *bio, ossl_CMS_ContentInfo *cms, ossl_BIO *data, int flags);

int ossl_CMS_final(ossl_CMS_ContentInfo *cms, ossl_BIO *data, ossl_BIO *dcont,
              unsigned int flags);

ossl_CMS_ContentInfo *ossl_CMS_sign(ossl_X509 *signcert, ossl_EVP_PKEY *pkey,
                          ossl_STACK_OF(ossl_X509) *certs, ossl_BIO *data,
                          unsigned int flags);
ossl_CMS_ContentInfo *ossl_CMS_sign_ex(ossl_X509 *signcert, ossl_EVP_PKEY *pkey,
                             ossl_STACK_OF(ossl_X509) *certs, ossl_BIO *data,
                             unsigned int flags, ossl_OSSL_LIB_CTX *ctx,
                             const char *propq);

ossl_CMS_ContentInfo *ossl_CMS_sign_receipt(ossl_CMS_SignerInfo *si,
                                  ossl_X509 *signcert, ossl_EVP_PKEY *pkey,
                                  ossl_STACK_OF(ossl_X509) *certs, unsigned int flags);

int ossl_CMS_data(ossl_CMS_ContentInfo *cms, ossl_BIO *out, unsigned int flags);
ossl_CMS_ContentInfo *ossl_CMS_data_create(ossl_BIO *in, unsigned int flags);
ossl_CMS_ContentInfo *ossl_CMS_data_create_ex(ossl_BIO *in, unsigned int flags,
                                    ossl_OSSL_LIB_CTX *ctx, const char *propq);

int ossl_CMS_digest_verify(ossl_CMS_ContentInfo *cms, ossl_BIO *dcont, ossl_BIO *out,
                      unsigned int flags);
ossl_CMS_ContentInfo *ossl_CMS_digest_create(ossl_BIO *in, const ossl_EVP_MD *md,
                                   unsigned int flags);
ossl_CMS_ContentInfo *ossl_CMS_digest_create_ex(ossl_BIO *in, const ossl_EVP_MD *md,
                                      unsigned int flags, ossl_OSSL_LIB_CTX *ctx,
                                      const char *propq);

int ossl_CMS_EncryptedData_decrypt(ossl_CMS_ContentInfo *cms,
                              const unsigned char *key, size_t keylen,
                              ossl_BIO *dcont, ossl_BIO *out, unsigned int flags);

ossl_CMS_ContentInfo *ossl_CMS_EncryptedData_encrypt(ossl_BIO *in, const ossl_EVP_CIPHER *cipher,
                                           const unsigned char *key,
                                           size_t keylen, unsigned int flags);
ossl_CMS_ContentInfo *ossl_CMS_EncryptedData_encrypt_ex(ossl_BIO *in, const ossl_EVP_CIPHER *cipher,
                                              const unsigned char *key,
                                              size_t keylen, unsigned int flags,
                                              ossl_OSSL_LIB_CTX *ctx,
                                              const char *propq);

int ossl_CMS_EncryptedData_set1_key(ossl_CMS_ContentInfo *cms, const ossl_EVP_CIPHER *ciph,
                               const unsigned char *key, size_t keylen);

int ossl_CMS_verify(ossl_CMS_ContentInfo *cms, ossl_STACK_OF(ossl_X509) *certs,
               ossl_X509_STORE *store, ossl_BIO *dcont, ossl_BIO *out, unsigned int flags);

int ossl_CMS_verify_receipt(ossl_CMS_ContentInfo *rcms, ossl_CMS_ContentInfo *ocms,
                       ossl_STACK_OF(ossl_X509) *certs,
                       ossl_X509_STORE *store, unsigned int flags);

ossl_STACK_OF(ossl_X509) *ossl_CMS_get0_signers(ossl_CMS_ContentInfo *cms);

ossl_CMS_ContentInfo *ossl_CMS_encrypt(ossl_STACK_OF(ossl_X509) *certs, ossl_BIO *in,
                             const ossl_EVP_CIPHER *cipher, unsigned int flags);
ossl_CMS_ContentInfo *ossl_CMS_encrypt_ex(ossl_STACK_OF(ossl_X509) *certs, ossl_BIO *in,
                                const ossl_EVP_CIPHER *cipher, unsigned int flags,
                                ossl_OSSL_LIB_CTX *ctx, const char *propq);

int ossl_CMS_decrypt(ossl_CMS_ContentInfo *cms, ossl_EVP_PKEY *pkey, ossl_X509 *cert,
                ossl_BIO *dcont, ossl_BIO *out, unsigned int flags);

int ossl_CMS_decrypt_set1_pkey(ossl_CMS_ContentInfo *cms, ossl_EVP_PKEY *pk, ossl_X509 *cert);
int ossl_CMS_decrypt_set1_pkey_and_peer(ossl_CMS_ContentInfo *cms, ossl_EVP_PKEY *pk,
                                   ossl_X509 *cert, ossl_X509 *peer);
int ossl_CMS_decrypt_set1_key(ossl_CMS_ContentInfo *cms,
                         unsigned char *key, size_t keylen,
                         const unsigned char *id, size_t idlen);
int ossl_CMS_decrypt_set1_password(ossl_CMS_ContentInfo *cms,
                              unsigned char *pass, ossl_ossl_ssize_t passlen);

ossl_STACK_OF(ossl_CMS_RecipientInfo) *ossl_CMS_get0_RecipientInfos(ossl_CMS_ContentInfo *cms);
int ossl_CMS_RecipientInfo_type(ossl_CMS_RecipientInfo *ri);
ossl_EVP_PKEY_CTX *ossl_CMS_RecipientInfo_get0_pkey_ctx(ossl_CMS_RecipientInfo *ri);
ossl_CMS_ContentInfo *ossl_CMS_AuthEnvelopedData_create(const ossl_EVP_CIPHER *cipher);
ossl_CMS_ContentInfo *
ossl_CMS_AuthEnvelopedData_create_ex(const ossl_EVP_CIPHER *cipher, ossl_OSSL_LIB_CTX *ctx,
                                const char *propq);
ossl_CMS_ContentInfo *ossl_CMS_EnvelopedData_create(const ossl_EVP_CIPHER *cipher);
ossl_CMS_ContentInfo *ossl_CMS_EnvelopedData_create_ex(const ossl_EVP_CIPHER *cipher,
                                             ossl_OSSL_LIB_CTX *ctx,
                                             const char *propq);

ossl_CMS_RecipientInfo *ossl_CMS_add1_recipient_cert(ossl_CMS_ContentInfo *cms,
                                           ossl_X509 *recip, unsigned int flags);
ossl_CMS_RecipientInfo *ossl_CMS_add1_recipient(ossl_CMS_ContentInfo *cms, ossl_X509 *recip,
     ossl_EVP_PKEY *originatorPrivKey, ossl_X509 * originator, unsigned int flags);
int ossl_CMS_RecipientInfo_set0_pkey(ossl_CMS_RecipientInfo *ri, ossl_EVP_PKEY *pkey);
int ossl_CMS_RecipientInfo_ktri_cert_cmp(ossl_CMS_RecipientInfo *ri, ossl_X509 *cert);
int ossl_CMS_RecipientInfo_ktri_get0_algs(ossl_CMS_RecipientInfo *ri,
                                     ossl_EVP_PKEY **pk, ossl_X509 **recip,
                                     ossl_X509_ALGOR **palg);
int ossl_CMS_RecipientInfo_ktri_get0_signer_id(ossl_CMS_RecipientInfo *ri,
                                          ossl_ASN1_OCTET_STRING **keyid,
                                          ossl_X509_NAME **issuer,
                                          ossl_ASN1_INTEGER **sno);

ossl_CMS_RecipientInfo *ossl_CMS_add0_recipient_key(ossl_CMS_ContentInfo *cms, int nid,
                                          unsigned char *key, size_t keylen,
                                          unsigned char *id, size_t idlen,
                                          ossl_ASN1_GENERALIZEDTIME *date,
                                          ossl_ASN1_OBJECT *otherTypeId,
                                          ossl_ASN1_TYPE *otherType);

int ossl_CMS_RecipientInfo_kekri_get0_id(ossl_CMS_RecipientInfo *ri,
                                    ossl_X509_ALGOR **palg,
                                    ossl_ASN1_OCTET_STRING **pid,
                                    ossl_ASN1_GENERALIZEDTIME **pdate,
                                    ossl_ASN1_OBJECT **potherid,
                                    ossl_ASN1_TYPE **pothertype);

int ossl_CMS_RecipientInfo_set0_key(ossl_CMS_RecipientInfo *ri,
                               unsigned char *key, size_t keylen);

int ossl_CMS_RecipientInfo_kekri_id_cmp(ossl_CMS_RecipientInfo *ri,
                                   const unsigned char *id, size_t idlen);

int ossl_CMS_RecipientInfo_set0_password(ossl_CMS_RecipientInfo *ri,
                                    unsigned char *pass,
                                    ossl_ossl_ssize_t passlen);

ossl_CMS_RecipientInfo *ossl_CMS_add0_recipient_password(ossl_CMS_ContentInfo *cms,
                                               int iter, int wrap_nid,
                                               int pbe_nid,
                                               unsigned char *pass,
                                               ossl_ossl_ssize_t passlen,
                                               const ossl_EVP_CIPHER *kekciph);

int ossl_CMS_RecipientInfo_decrypt(ossl_CMS_ContentInfo *cms, ossl_CMS_RecipientInfo *ri);
int ossl_CMS_RecipientInfo_encrypt(const ossl_CMS_ContentInfo *cms, ossl_CMS_RecipientInfo *ri);

int ossl_CMS_uncompress(ossl_CMS_ContentInfo *cms, ossl_BIO *dcont, ossl_BIO *out,
                   unsigned int flags);
ossl_CMS_ContentInfo *ossl_CMS_compress(ossl_BIO *in, int comp_nid, unsigned int flags);

int ossl_CMS_set1_eContentType(ossl_CMS_ContentInfo *cms, const ossl_ASN1_OBJECT *oid);
const ossl_ASN1_OBJECT *ossl_CMS_get0_eContentType(ossl_CMS_ContentInfo *cms);

ossl_CMS_CertificateChoices *ossl_CMS_add0_CertificateChoices(ossl_CMS_ContentInfo *cms);
int ossl_CMS_add0_cert(ossl_CMS_ContentInfo *cms, ossl_X509 *cert);
int ossl_CMS_add1_cert(ossl_CMS_ContentInfo *cms, ossl_X509 *cert);
ossl_STACK_OF(ossl_X509) *ossl_CMS_get1_certs(ossl_CMS_ContentInfo *cms);

ossl_CMS_RevocationInfoChoice *ossl_CMS_add0_RevocationInfoChoice(ossl_CMS_ContentInfo *cms);
int ossl_CMS_add0_crl(ossl_CMS_ContentInfo *cms, ossl_X509_CRL *crl);
int ossl_CMS_add1_crl(ossl_CMS_ContentInfo *cms, ossl_X509_CRL *crl);
ossl_STACK_OF(ossl_X509_CRL) *ossl_CMS_get1_crls(ossl_CMS_ContentInfo *cms);

int ossl_CMS_SignedData_init(ossl_CMS_ContentInfo *cms);
ossl_CMS_SignerInfo *ossl_CMS_add1_signer(ossl_CMS_ContentInfo *cms,
                                ossl_X509 *signer, ossl_EVP_PKEY *pk, const ossl_EVP_MD *md,
                                unsigned int flags);
ossl_EVP_PKEY_CTX *ossl_CMS_SignerInfo_get0_pkey_ctx(ossl_CMS_SignerInfo *si);
ossl_EVP_MD_CTX *ossl_CMS_SignerInfo_get0_md_ctx(ossl_CMS_SignerInfo *si);
ossl_STACK_OF(ossl_CMS_SignerInfo) *ossl_CMS_get0_SignerInfos(ossl_CMS_ContentInfo *cms);

void ossl_CMS_SignerInfo_set1_signer_cert(ossl_CMS_SignerInfo *si, ossl_X509 *signer);
int ossl_CMS_SignerInfo_get0_signer_id(ossl_CMS_SignerInfo *si,
                                  ossl_ASN1_OCTET_STRING **keyid,
                                  ossl_X509_NAME **issuer, ossl_ASN1_INTEGER **sno);
int ossl_CMS_SignerInfo_cert_cmp(ossl_CMS_SignerInfo *si, ossl_X509 *cert);
int ossl_CMS_set1_signers_certs(ossl_CMS_ContentInfo *cms, ossl_STACK_OF(ossl_X509) *certs,
                           unsigned int flags);
void ossl_CMS_SignerInfo_get0_algs(ossl_CMS_SignerInfo *si, ossl_EVP_PKEY **pk,
                              ossl_X509 **signer, ossl_X509_ALGOR **pdig,
                              ossl_X509_ALGOR **psig);
ossl_ASN1_OCTET_STRING *ossl_CMS_SignerInfo_get0_signature(ossl_CMS_SignerInfo *si);
int ossl_CMS_SignerInfo_sign(ossl_CMS_SignerInfo *si);
int ossl_CMS_SignerInfo_verify(ossl_CMS_SignerInfo *si);
int ossl_CMS_SignerInfo_verify_content(ossl_CMS_SignerInfo *si, ossl_BIO *chain);

int ossl_CMS_add_smimecap(ossl_CMS_SignerInfo *si, ossl_STACK_OF(ossl_X509_ALGOR) *algs);
int ossl_CMS_add_simple_smimecap(ossl_STACK_OF(ossl_X509_ALGOR) **algs,
                            int algnid, int keysize);
int ossl_CMS_add_standard_smimecap(ossl_STACK_OF(ossl_X509_ALGOR) **smcap);

int ossl_CMS_signed_get_attr_count(const ossl_CMS_SignerInfo *si);
int ossl_CMS_signed_get_attr_by_NID(const ossl_CMS_SignerInfo *si, int nid,
                               int lastpos);
int ossl_CMS_signed_get_attr_by_OBJ(const ossl_CMS_SignerInfo *si, const ossl_ASN1_OBJECT *obj,
                               int lastpos);
ossl_X509_ATTRIBUTE *ossl_CMS_signed_get_attr(const ossl_CMS_SignerInfo *si, int loc);
ossl_X509_ATTRIBUTE *ossl_CMS_signed_delete_attr(ossl_CMS_SignerInfo *si, int loc);
int ossl_CMS_signed_add1_attr(ossl_CMS_SignerInfo *si, ossl_X509_ATTRIBUTE *attr);
int ossl_CMS_signed_add1_attr_by_OBJ(ossl_CMS_SignerInfo *si,
                                const ossl_ASN1_OBJECT *obj, int type,
                                const void *bytes, int len);
int ossl_CMS_signed_add1_attr_by_NID(ossl_CMS_SignerInfo *si,
                                int nid, int type,
                                const void *bytes, int len);
int ossl_CMS_signed_add1_attr_by_txt(ossl_CMS_SignerInfo *si,
                                const char *attrname, int type,
                                const void *bytes, int len);
void *ossl_CMS_signed_get0_data_by_OBJ(const ossl_CMS_SignerInfo *si,
                                  const ossl_ASN1_OBJECT *oid,
                                  int lastpos, int type);

int ossl_CMS_unsigned_get_attr_count(const ossl_CMS_SignerInfo *si);
int ossl_CMS_unsigned_get_attr_by_NID(const ossl_CMS_SignerInfo *si, int nid,
                                 int lastpos);
int ossl_CMS_unsigned_get_attr_by_OBJ(const ossl_CMS_SignerInfo *si,
                                 const ossl_ASN1_OBJECT *obj, int lastpos);
ossl_X509_ATTRIBUTE *ossl_CMS_unsigned_get_attr(const ossl_CMS_SignerInfo *si, int loc);
ossl_X509_ATTRIBUTE *ossl_CMS_unsigned_delete_attr(ossl_CMS_SignerInfo *si, int loc);
int ossl_CMS_unsigned_add1_attr(ossl_CMS_SignerInfo *si, ossl_X509_ATTRIBUTE *attr);
int ossl_CMS_unsigned_add1_attr_by_OBJ(ossl_CMS_SignerInfo *si,
                                  const ossl_ASN1_OBJECT *obj, int type,
                                  const void *bytes, int len);
int ossl_CMS_unsigned_add1_attr_by_NID(ossl_CMS_SignerInfo *si,
                                  int nid, int type,
                                  const void *bytes, int len);
int ossl_CMS_unsigned_add1_attr_by_txt(ossl_CMS_SignerInfo *si,
                                  const char *attrname, int type,
                                  const void *bytes, int len);
void *ossl_CMS_unsigned_get0_data_by_OBJ(ossl_CMS_SignerInfo *si, ossl_ASN1_OBJECT *oid,
                                    int lastpos, int type);

int ossl_CMS_get1_ReceiptRequest(ossl_CMS_SignerInfo *si, ossl_CMS_ReceiptRequest **prr);
ossl_CMS_ReceiptRequest *ossl_CMS_ReceiptRequest_create0(
    unsigned char *id, int idlen, int allorfirst,
    ossl_STACK_OF(ossl_GENERAL_NAMES) *receiptList,
    ossl_STACK_OF(ossl_GENERAL_NAMES) *receiptsTo);
ossl_CMS_ReceiptRequest *ossl_CMS_ReceiptRequest_create0_ex(
    unsigned char *id, int idlen, int allorfirst,
    ossl_STACK_OF(ossl_GENERAL_NAMES) *receiptList,
    ossl_STACK_OF(ossl_GENERAL_NAMES) *receiptsTo,
    ossl_OSSL_LIB_CTX *ctx);

int ossl_CMS_add1_ReceiptRequest(ossl_CMS_SignerInfo *si, ossl_CMS_ReceiptRequest *rr);
void ossl_CMS_ReceiptRequest_get0_values(ossl_CMS_ReceiptRequest *rr,
                                    ossl_ASN1_STRING **pcid,
                                    int *pallorfirst,
                                    ossl_STACK_OF(ossl_GENERAL_NAMES) **plist,
                                    ossl_STACK_OF(ossl_GENERAL_NAMES) **prto);
int ossl_CMS_RecipientInfo_kari_get0_alg(ossl_CMS_RecipientInfo *ri,
                                    ossl_X509_ALGOR **palg,
                                    ossl_ASN1_OCTET_STRING **pukm);
ossl_STACK_OF(ossl_CMS_RecipientEncryptedKey)
*ossl_CMS_RecipientInfo_kari_get0_reks(ossl_CMS_RecipientInfo *ri);

int ossl_CMS_RecipientInfo_kari_get0_orig_id(ossl_CMS_RecipientInfo *ri,
                                        ossl_X509_ALGOR **pubalg,
                                        ossl_ASN1_BIT_STRING **pubkey,
                                        ossl_ASN1_OCTET_STRING **keyid,
                                        ossl_X509_NAME **issuer,
                                        ossl_ASN1_INTEGER **sno);

int ossl_CMS_RecipientInfo_kari_orig_id_cmp(ossl_CMS_RecipientInfo *ri, ossl_X509 *cert);

int ossl_CMS_RecipientEncryptedKey_get0_id(ossl_CMS_RecipientEncryptedKey *rek,
                                      ossl_ASN1_OCTET_STRING **keyid,
                                      ossl_ASN1_GENERALIZEDTIME **tm,
                                      ossl_CMS_OtherKeyAttribute **other,
                                      ossl_X509_NAME **issuer, ossl_ASN1_INTEGER **sno);
int ossl_CMS_RecipientEncryptedKey_cert_cmp(ossl_CMS_RecipientEncryptedKey *rek,
                                       ossl_X509 *cert);
int ossl_CMS_RecipientInfo_kari_set0_pkey(ossl_CMS_RecipientInfo *ri, ossl_EVP_PKEY *pk);
int ossl_CMS_RecipientInfo_kari_set0_pkey_and_peer(ossl_CMS_RecipientInfo *ri, ossl_EVP_PKEY *pk, ossl_X509 *peer);
ossl_EVP_CIPHER_CTX *ossl_CMS_RecipientInfo_kari_get0_ctx(ossl_CMS_RecipientInfo *ri);
int ossl_CMS_RecipientInfo_kari_decrypt(ossl_CMS_ContentInfo *cms,
                                   ossl_CMS_RecipientInfo *ri,
                                   ossl_CMS_RecipientEncryptedKey *rek);

int ossl_CMS_SharedInfo_encode(unsigned char **pder, ossl_X509_ALGOR *kekalg,
                          ossl_ASN1_OCTET_STRING *ukm, int keylen);

/* Backward compatibility for spelling errors. */
# define ossl_CMS_R_UNKNOWN_DIGEST_ALGORITM ossl_CMS_R_UNKNOWN_DIGEST_ALGORITHM
# define ossl_CMS_R_UNSUPPORTED_RECPIENTINFO_TYPE \
    ossl_CMS_R_UNSUPPORTED_RECIPIENTINFO_TYPE

#  ifdef  __cplusplus
}
#  endif
# endif
#endif
