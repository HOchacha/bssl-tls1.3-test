/*
 * WARNING: do not edit!
 * Generated by Makefile from ../../../openssl/source/include/openssl/ess.h.in
 *
 * Copyright 2019-2021 The OpenSSL Project Authors. All Rights Reserved.
 *
 * Licensed under the Apache License 2.0 (the "License").  You may not use
 * this file except in compliance with the License.  You can obtain a copy
 * in the file LICENSE in the source distribution or at
 * https://www.openssl.org/source/license.html
 */



#ifndef ossl_OPENSSL_ESS_H
# define ossl_OPENSSL_ESS_H
# pragma once

# include "ossl/openssl/opensslconf.h"

# include "ossl/openssl/safestack.h"
# include "ossl/openssl/x509.h"
# include "ossl/openssl/esserr.h"

# ifdef  __cplusplus
extern "C" {
# endif


typedef struct ossl_ESS_issuer_serial ossl_ESS_ISSUER_SERIAL;
typedef struct ossl_ESS_cert_id ossl_ESS_CERT_ID;
typedef struct ossl_ESS_signing_cert ossl_ESS_SIGNING_CERT;

ossl_SKM_DEFINE_STACK_OF_INTERNAL(ossl_ESS_CERT_ID, ossl_ESS_CERT_ID, ossl_ESS_CERT_ID)
#define ossl_sk_ESS_CERT_ID_num(sk) ossl_OPENSSL_sk_num(ossl_ossl_check_const_ESS_CERT_ID_sk_type(sk))
#define ossl_sk_ESS_CERT_ID_value(sk, idx) ((ossl_ESS_CERT_ID *)ossl_OPENSSL_sk_value(ossl_ossl_check_const_ESS_CERT_ID_sk_type(sk), (idx)))
#define ossl_sk_ESS_CERT_ID_new(cmp) ((ossl_STACK_OF(ossl_ESS_CERT_ID) *)ossl_OPENSSL_sk_new(ossl_ossl_check_ESS_CERT_ID_compfunc_type(cmp)))
#define ossl_sk_ESS_CERT_ID_new_null() ((ossl_STACK_OF(ossl_ESS_CERT_ID) *)ossl_OPENSSL_sk_new_null())
#define ossl_sk_ESS_CERT_ID_new_reserve(cmp, n) ((ossl_STACK_OF(ossl_ESS_CERT_ID) *)ossl_OPENSSL_sk_new_reserve(ossl_ossl_check_ESS_CERT_ID_compfunc_type(cmp), (n)))
#define ossl_sk_ESS_CERT_ID_reserve(sk, n) ossl_OPENSSL_sk_reserve(ossl_ossl_check_ESS_CERT_ID_sk_type(sk), (n))
#define ossl_sk_ESS_CERT_ID_free(sk) ossl_OPENSSL_sk_free(ossl_ossl_check_ESS_CERT_ID_sk_type(sk))
#define ossl_sk_ESS_CERT_ID_zero(sk) ossl_OPENSSL_sk_zero(ossl_ossl_check_ESS_CERT_ID_sk_type(sk))
#define ossl_sk_ESS_CERT_ID_delete(sk, i) ((ossl_ESS_CERT_ID *)ossl_OPENSSL_sk_delete(ossl_ossl_check_ESS_CERT_ID_sk_type(sk), (i)))
#define ossl_sk_ESS_CERT_ID_delete_ptr(sk, ptr) ((ossl_ESS_CERT_ID *)ossl_OPENSSL_sk_delete_ptr(ossl_ossl_check_ESS_CERT_ID_sk_type(sk), ossl_ossl_check_ESS_CERT_ID_type(ptr)))
#define ossl_sk_ESS_CERT_ID_push(sk, ptr) ossl_OPENSSL_sk_push(ossl_ossl_check_ESS_CERT_ID_sk_type(sk), ossl_ossl_check_ESS_CERT_ID_type(ptr))
#define ossl_sk_ESS_CERT_ID_unshift(sk, ptr) ossl_OPENSSL_sk_unshift(ossl_ossl_check_ESS_CERT_ID_sk_type(sk), ossl_ossl_check_ESS_CERT_ID_type(ptr))
#define ossl_sk_ESS_CERT_ID_pop(sk) ((ossl_ESS_CERT_ID *)ossl_OPENSSL_sk_pop(ossl_ossl_check_ESS_CERT_ID_sk_type(sk)))
#define ossl_sk_ESS_CERT_ID_shift(sk) ((ossl_ESS_CERT_ID *)ossl_OPENSSL_sk_shift(ossl_ossl_check_ESS_CERT_ID_sk_type(sk)))
#define ossl_sk_ESS_CERT_ID_pop_free(sk, freefunc) ossl_OPENSSL_sk_pop_free(ossl_ossl_check_ESS_CERT_ID_sk_type(sk),ossl_ossl_check_ESS_CERT_ID_freefunc_type(freefunc))
#define ossl_sk_ESS_CERT_ID_insert(sk, ptr, idx) ossl_OPENSSL_sk_insert(ossl_ossl_check_ESS_CERT_ID_sk_type(sk), ossl_ossl_check_ESS_CERT_ID_type(ptr), (idx))
#define ossl_sk_ESS_CERT_ID_set(sk, idx, ptr) ((ossl_ESS_CERT_ID *)ossl_OPENSSL_sk_set(ossl_ossl_check_ESS_CERT_ID_sk_type(sk), (idx), ossl_ossl_check_ESS_CERT_ID_type(ptr)))
#define ossl_sk_ESS_CERT_ID_find(sk, ptr) ossl_OPENSSL_sk_find(ossl_ossl_check_ESS_CERT_ID_sk_type(sk), ossl_ossl_check_ESS_CERT_ID_type(ptr))
#define ossl_sk_ESS_CERT_ID_find_ex(sk, ptr) ossl_OPENSSL_sk_find_ex(ossl_ossl_check_ESS_CERT_ID_sk_type(sk), ossl_ossl_check_ESS_CERT_ID_type(ptr))
#define ossl_sk_ESS_CERT_ID_find_all(sk, ptr, pnum) ossl_OPENSSL_sk_find_all(ossl_ossl_check_ESS_CERT_ID_sk_type(sk), ossl_ossl_check_ESS_CERT_ID_type(ptr), pnum)
#define ossl_sk_ESS_CERT_ID_sort(sk) ossl_OPENSSL_sk_sort(ossl_ossl_check_ESS_CERT_ID_sk_type(sk))
#define ossl_sk_ESS_CERT_ID_is_sorted(sk) ossl_OPENSSL_sk_is_sorted(ossl_ossl_check_const_ESS_CERT_ID_sk_type(sk))
#define ossl_sk_ESS_CERT_ID_dup(sk) ((ossl_STACK_OF(ossl_ESS_CERT_ID) *)ossl_OPENSSL_sk_dup(ossl_ossl_check_const_ESS_CERT_ID_sk_type(sk)))
#define ossl_sk_ESS_CERT_ID_deep_copy(sk, copyfunc, freefunc) ((ossl_STACK_OF(ossl_ESS_CERT_ID) *)ossl_OPENSSL_sk_deep_copy(ossl_ossl_check_const_ESS_CERT_ID_sk_type(sk), ossl_ossl_check_ESS_CERT_ID_copyfunc_type(copyfunc), ossl_ossl_check_ESS_CERT_ID_freefunc_type(freefunc)))
#define ossl_sk_ESS_CERT_ID_set_cmp_func(sk, cmp) ((ossl_sk_ESS_CERT_ID_compfunc)ossl_OPENSSL_sk_set_cmp_func(ossl_ossl_check_ESS_CERT_ID_sk_type(sk), ossl_ossl_check_ESS_CERT_ID_compfunc_type(cmp)))



typedef struct ossl_ESS_signing_cert_v2_st ossl_ESS_SIGNING_CERT_V2;
typedef struct ossl_ESS_cert_id_v2_st ossl_ESS_CERT_ID_V2;

ossl_SKM_DEFINE_STACK_OF_INTERNAL(ossl_ESS_CERT_ID_V2, ossl_ESS_CERT_ID_V2, ossl_ESS_CERT_ID_V2)
#define ossl_sk_ESS_CERT_ID_V2_num(sk) ossl_OPENSSL_sk_num(ossl_ossl_check_const_ESS_CERT_ID_V2_sk_type(sk))
#define ossl_sk_ESS_CERT_ID_V2_value(sk, idx) ((ossl_ESS_CERT_ID_V2 *)ossl_OPENSSL_sk_value(ossl_ossl_check_const_ESS_CERT_ID_V2_sk_type(sk), (idx)))
#define ossl_sk_ESS_CERT_ID_V2_new(cmp) ((ossl_STACK_OF(ossl_ESS_CERT_ID_V2) *)ossl_OPENSSL_sk_new(ossl_ossl_check_ESS_CERT_ID_V2_compfunc_type(cmp)))
#define ossl_sk_ESS_CERT_ID_V2_new_null() ((ossl_STACK_OF(ossl_ESS_CERT_ID_V2) *)ossl_OPENSSL_sk_new_null())
#define ossl_sk_ESS_CERT_ID_V2_new_reserve(cmp, n) ((ossl_STACK_OF(ossl_ESS_CERT_ID_V2) *)ossl_OPENSSL_sk_new_reserve(ossl_ossl_check_ESS_CERT_ID_V2_compfunc_type(cmp), (n)))
#define ossl_sk_ESS_CERT_ID_V2_reserve(sk, n) ossl_OPENSSL_sk_reserve(ossl_ossl_check_ESS_CERT_ID_V2_sk_type(sk), (n))
#define ossl_sk_ESS_CERT_ID_V2_free(sk) ossl_OPENSSL_sk_free(ossl_ossl_check_ESS_CERT_ID_V2_sk_type(sk))
#define ossl_sk_ESS_CERT_ID_V2_zero(sk) ossl_OPENSSL_sk_zero(ossl_ossl_check_ESS_CERT_ID_V2_sk_type(sk))
#define ossl_sk_ESS_CERT_ID_V2_delete(sk, i) ((ossl_ESS_CERT_ID_V2 *)ossl_OPENSSL_sk_delete(ossl_ossl_check_ESS_CERT_ID_V2_sk_type(sk), (i)))
#define ossl_sk_ESS_CERT_ID_V2_delete_ptr(sk, ptr) ((ossl_ESS_CERT_ID_V2 *)ossl_OPENSSL_sk_delete_ptr(ossl_ossl_check_ESS_CERT_ID_V2_sk_type(sk), ossl_ossl_check_ESS_CERT_ID_V2_type(ptr)))
#define ossl_sk_ESS_CERT_ID_V2_push(sk, ptr) ossl_OPENSSL_sk_push(ossl_ossl_check_ESS_CERT_ID_V2_sk_type(sk), ossl_ossl_check_ESS_CERT_ID_V2_type(ptr))
#define ossl_sk_ESS_CERT_ID_V2_unshift(sk, ptr) ossl_OPENSSL_sk_unshift(ossl_ossl_check_ESS_CERT_ID_V2_sk_type(sk), ossl_ossl_check_ESS_CERT_ID_V2_type(ptr))
#define ossl_sk_ESS_CERT_ID_V2_pop(sk) ((ossl_ESS_CERT_ID_V2 *)ossl_OPENSSL_sk_pop(ossl_ossl_check_ESS_CERT_ID_V2_sk_type(sk)))
#define ossl_sk_ESS_CERT_ID_V2_shift(sk) ((ossl_ESS_CERT_ID_V2 *)ossl_OPENSSL_sk_shift(ossl_ossl_check_ESS_CERT_ID_V2_sk_type(sk)))
#define ossl_sk_ESS_CERT_ID_V2_pop_free(sk, freefunc) ossl_OPENSSL_sk_pop_free(ossl_ossl_check_ESS_CERT_ID_V2_sk_type(sk),ossl_ossl_check_ESS_CERT_ID_V2_freefunc_type(freefunc))
#define ossl_sk_ESS_CERT_ID_V2_insert(sk, ptr, idx) ossl_OPENSSL_sk_insert(ossl_ossl_check_ESS_CERT_ID_V2_sk_type(sk), ossl_ossl_check_ESS_CERT_ID_V2_type(ptr), (idx))
#define ossl_sk_ESS_CERT_ID_V2_set(sk, idx, ptr) ((ossl_ESS_CERT_ID_V2 *)ossl_OPENSSL_sk_set(ossl_ossl_check_ESS_CERT_ID_V2_sk_type(sk), (idx), ossl_ossl_check_ESS_CERT_ID_V2_type(ptr)))
#define ossl_sk_ESS_CERT_ID_V2_find(sk, ptr) ossl_OPENSSL_sk_find(ossl_ossl_check_ESS_CERT_ID_V2_sk_type(sk), ossl_ossl_check_ESS_CERT_ID_V2_type(ptr))
#define ossl_sk_ESS_CERT_ID_V2_find_ex(sk, ptr) ossl_OPENSSL_sk_find_ex(ossl_ossl_check_ESS_CERT_ID_V2_sk_type(sk), ossl_ossl_check_ESS_CERT_ID_V2_type(ptr))
#define ossl_sk_ESS_CERT_ID_V2_find_all(sk, ptr, pnum) ossl_OPENSSL_sk_find_all(ossl_ossl_check_ESS_CERT_ID_V2_sk_type(sk), ossl_ossl_check_ESS_CERT_ID_V2_type(ptr), pnum)
#define ossl_sk_ESS_CERT_ID_V2_sort(sk) ossl_OPENSSL_sk_sort(ossl_ossl_check_ESS_CERT_ID_V2_sk_type(sk))
#define ossl_sk_ESS_CERT_ID_V2_is_sorted(sk) ossl_OPENSSL_sk_is_sorted(ossl_ossl_check_const_ESS_CERT_ID_V2_sk_type(sk))
#define ossl_sk_ESS_CERT_ID_V2_dup(sk) ((ossl_STACK_OF(ossl_ESS_CERT_ID_V2) *)ossl_OPENSSL_sk_dup(ossl_ossl_check_const_ESS_CERT_ID_V2_sk_type(sk)))
#define ossl_sk_ESS_CERT_ID_V2_deep_copy(sk, copyfunc, freefunc) ((ossl_STACK_OF(ossl_ESS_CERT_ID_V2) *)ossl_OPENSSL_sk_deep_copy(ossl_ossl_check_const_ESS_CERT_ID_V2_sk_type(sk), ossl_ossl_check_ESS_CERT_ID_V2_copyfunc_type(copyfunc), ossl_ossl_check_ESS_CERT_ID_V2_freefunc_type(freefunc)))
#define ossl_sk_ESS_CERT_ID_V2_set_cmp_func(sk, cmp) ((ossl_sk_ESS_CERT_ID_V2_compfunc)ossl_OPENSSL_sk_set_cmp_func(ossl_ossl_check_ESS_CERT_ID_V2_sk_type(sk), ossl_ossl_check_ESS_CERT_ID_V2_compfunc_type(cmp)))


ossl_DECLARE_ASN1_ALLOC_FUNCTIONS(ossl_ESS_ISSUER_SERIAL)
ossl_DECLARE_ASN1_ENCODE_FUNCTIONS_only(ossl_ESS_ISSUER_SERIAL, ossl_ESS_ISSUER_SERIAL)
ossl_DECLARE_ASN1_DUP_FUNCTION(ossl_ESS_ISSUER_SERIAL)

ossl_DECLARE_ASN1_ALLOC_FUNCTIONS(ossl_ESS_CERT_ID)
ossl_DECLARE_ASN1_ENCODE_FUNCTIONS_only(ossl_ESS_CERT_ID, ossl_ESS_CERT_ID)
ossl_DECLARE_ASN1_DUP_FUNCTION(ossl_ESS_CERT_ID)

ossl_DECLARE_ASN1_FUNCTIONS(ossl_ESS_SIGNING_CERT)
ossl_DECLARE_ASN1_DUP_FUNCTION(ossl_ESS_SIGNING_CERT)

ossl_DECLARE_ASN1_ALLOC_FUNCTIONS(ossl_ESS_CERT_ID_V2)
ossl_DECLARE_ASN1_ENCODE_FUNCTIONS_only(ossl_ESS_CERT_ID_V2, ossl_ESS_CERT_ID_V2)
ossl_DECLARE_ASN1_DUP_FUNCTION(ossl_ESS_CERT_ID_V2)

ossl_DECLARE_ASN1_FUNCTIONS(ossl_ESS_SIGNING_CERT_V2)
ossl_DECLARE_ASN1_DUP_FUNCTION(ossl_ESS_SIGNING_CERT_V2)

ossl_ESS_SIGNING_CERT *ossl_OSSL_ESS_signing_cert_new_init(const ossl_X509 *signcert,
                                                 const ossl_STACK_OF(ossl_X509) *certs,
                                                 int set_issuer_serial);
ossl_ESS_SIGNING_CERT_V2 *ossl_OSSL_ESS_signing_cert_v2_new_init(const ossl_EVP_MD *hash_alg,
                                                       const ossl_X509 *signcert,
                                                       const
                                                       ossl_STACK_OF(ossl_X509) *certs,
                                                       int set_issuer_serial);
int ossl_OSSL_ESS_check_signing_certs(const ossl_ESS_SIGNING_CERT *ss,
                                 const ossl_ESS_SIGNING_CERT_V2 *ssv2,
                                 const ossl_STACK_OF(ossl_X509) *chain,
                                 int require_signing_cert);

# ifdef  __cplusplus
}
# endif
#endif
